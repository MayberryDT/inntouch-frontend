# InnTouch Project Rules

# Project Structure Rules
root_dirs:
  - frontend: inntouch-frontend
  - backend: inntouch-backend
  - docs: docs

# File Organization
file_structure:
  frontend:
    src:
      - components/
      - contexts/
      - hooks/
      - pages/
      - services/
      - utils/
      - theme/
      - App.js
      - index.js
      - routes.js
  backend:
    src:
      - config/
      - controllers/
      - middleware/
      - models/
      - routes/
      - services/
      - utils/
      - app.js
      - server.js

# Naming Conventions
naming:
  components: PascalCase
  functions: camelCase
  variables: camelCase
  constants: UPPER_SNAKE_CASE
  files:
    components: PascalCase.jsx
    hooks: camelCase.js
    utils: camelCase.js
    styles: camelCase.css
  css_classes: kebab-case

# Code Style
style:
  indent: 2
  quotes: single
  semicolons: true
  max_line_length: 100
  trailing_comma: all
  bracket_spacing: true
  jsx_bracket_same_line: false
  arrow_parens: avoid
  end_of_line: lf

# TypeScript Configuration
typescript:
  strict: true
  target: ES2020
  module: ESNext
  jsx: react-jsx
  allowJs: true
  esModuleInterop: true

# Testing Requirements
testing:
  frontend:
    framework: jest
    coverage_threshold: 80
    required_tests:
      - components
      - hooks
      - services
  backend:
    framework: jest
    coverage_threshold: 80
    required_tests:
      - controllers
      - services
      - middleware

# Documentation Requirements
documentation:
  components:
    required:
      - description
      - props
      - examples
  functions:
    required:
      - description
      - parameters
      - return value
  api_endpoints:
    required:
      - description
      - method
      - path
      - request body
      - response format
      - authentication requirements

# Git Workflow
git:
  branch_naming:
    feature: feature/
    bugfix: bugfix/
    hotfix: hotfix/
    release: release/
  commit_message:
    format: "<type>(<scope>): <description>"
    types:
      - feat
      - fix
      - docs
      - style
      - refactor
      - test
      - chore
    max_length: 72

# Dependencies
dependencies:
  frontend:
    required:
      - react
      - react-dom
      - react-router-dom
      - @mui/material
      - @emotion/react
      - @emotion/styled
      - firebase
      - axios
  backend:
    required:
      - express
      - mongoose
      - firebase-admin
      - jsonwebtoken
      - cors
      - helmet

# Security Rules
security:
  authentication:
    jwt_expiration: 1h
    refresh_token_expiration: 7d
    password_requirements:
      min_length: 8
      require_uppercase: true
      require_lowercase: true
      require_number: true
      require_special: true
  api:
    rate_limiting:
      window_ms: 900000  # 15 minutes
      max_requests: 100
    required_headers:
      - Authorization
      - Content-Type
    cors:
      allowed_origins:
        - http://localhost:3000
        - https://*.inntouch.com
      allowed_methods:
        - GET
        - POST
        - PUT
        - DELETE
      allowed_headers:
        - Authorization
        - Content-Type

# Performance Requirements
performance:
  frontend:
    bundle_size_limit: 500KB
    first_contentful_paint: 1.5s
    time_to_interactive: 3.0s
  backend:
    response_time: 200ms
    memory_usage: 512MB

# Accessibility Requirements
accessibility:
  wcag_level: AA
  color_contrast: 4.5:1
  min_touch_target: 44px
  keyboard_navigation: true
  aria_labels: required

# UI/UX Standards
ui:
  colors:
    primary: "#1976D2"
    secondary: "#00796B"
    error: "#F44336"
    warning: "#FFC107"
    success: "#4CAF50"
    text:
      primary: "#212121"
      secondary: "#757575"
  typography:
    font_family: "Roboto, Arial, sans-serif"
    sizes:
      h1: 24px
      h2: 20px
      h3: 18px
      h4: 16px
      h5: 14px
      h6: 12px
      body1: 16px
      body2: 14px
  spacing:
    unit: 8px
    grid: true
  breakpoints:
    xs: 0
    sm: 600
    md: 960
    lg: 1280
    xl: 1920

# Error Handling
error_handling:
  frontend:
    required_error_boundaries: true
    error_reporting: true
    fallback_ui: required
  backend:
    logging:
      level: info
      format: json
    response_format:
      success: boolean
      message: string
      data: object
      errors: array

# Code Quality Tools
tools:
  required:
    - eslint
    - prettier
    - husky
    - lint-staged
  configurations:
    eslint:
      extends:
        - eslint:recommended
        - plugin:react/recommended
        - plugin:react-hooks/recommended
        - prettier
    prettier:
      singleQuote: true
      trailingComma: all
      tabWidth: 2
      semi: true
      printWidth: 100
    husky:
      hooks:
        - pre-commit: lint-staged
        - pre-push: npm test
    lint_staged:
      "*.{js,jsx,ts,tsx}":
        - eslint --fix
        - prettier --write
      "*.{json,css,md}":
        - prettier --write 